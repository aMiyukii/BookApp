@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BookApp.Models.AddCategoryViewModel
@{
    ViewData["Title"] = "Add category";
}

<html>
<head>
    <link rel="stylesheet" href="~/css/AddCategory.css" asp-append-version="true" />
    <link rel="stylesheet" href="path/to/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">
</head>

<body>
@using (Html.BeginForm("AddCategoryName", "AddCategory", FormMethod.Post))
{
    <div class="CategoryInformation">
        <h1 class="CategoryName">Add category name</h1>
        @Html.AntiForgeryToken()
        @Html.TextBoxFor(model => model.Name, new { id = "AddPatternName", placeholder = "Enter category name..." })
    </div>

    <button type="submit" class="AddCategoryButton">Add category</button>
}

    
<div class="Categories">
    @if (Model.Categories != null)
    {  
        <p class="categorytype">Standard Categories</p>
        @foreach (var categoryDTO in Model.Categories.Where(c => c.IsStandard == true))
        {
            <p class="categoryNameStand">@categoryDTO.Name</p>
            <div class="Icons">
            </div>
            <hr class="LineStand">
        }
     
        <p class="categorytype">Your Categories</p>
        @foreach (var categoryDTO in Model.Categories.Where(c => c.IsStandard == false))
        {
            <div class="categoryItem" data-id="@categoryDTO.Id">
                <p class="categoryNames">@categoryDTO.Name</p>
                <div class="Icons">
                    <i class="fa-solid fa-pen-to-square edit-icon"></i>
                    <i class="fa-solid fa-trash-can delete-icon"></i>
                </div>
            </div>
            <hr class="line">
        }
    }
    else
    {
        <p>No categories available.</p>
    }
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function() {
        // Edit category
        $('.edit-icon').click(function() {
            var categoryId = $(this).closest('.categoryItem').data('id');
            var newName = prompt('Enter new category name:');
            if (newName) {
                $.post('@Url.Action("UpdateCategoryName", "AddCategory")', { id: categoryId, newName: newName }, function(data) {
                    location.reload();
                });
            }
        });

        // Delete category
        $('.delete-icon').click(function() {
            var categoryId = $(this).closest('.categoryItem').data('id');
            if (confirm('Are you sure you want to delete this category?')) {
                $.post('@Url.Action("DeleteCategory", "AddCategory")', { id: categoryId }, function(data) {
                    location.reload();
                });
            }
        });

        // Clear textbox after adding category
        $('.AddCategoryButton').click(function() {
            var categoryName = $('#AddPatternName').val();
            if (categoryName.trim() !== '') {
                $.post('@Url.Action("AddCategoryName", "AddCategory")', { name: categoryName }, function(data) {
                    location.reload();
                });
            } else {
                alert('Please enter a category name.');
            }
            $('#AddPatternName').val('');
        });
    });
</script>

</body>
</html>
