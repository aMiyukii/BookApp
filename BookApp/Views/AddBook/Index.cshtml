@using BookApp.Core.DTO
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BookApp.Models.AddBookViewModel
@{
    ViewData["Title"] = "Add book to library";
}

<html>
<head>
    <link rel="stylesheet" href="~/css/AddBook.css" asp-append-version="true" />
    <script src="https://kit.fontawesome.com/de6521028c.js" crossorigin="anonymous"></script>
</head>

<body>
    <div class="grid-column">
        <div class="grid-item">
            <form class="d-flex">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input class="searchbar" type="search" placeholder="Search book" aria-label="Search">
            </form>

            <h1 class="AddCategory">Add standard category</h1>
            <div class="dropdown">
                <label for="category-options"></label>
                <div class="dropdownClone" id="dropdownContainer">
                    <select name="category-options" id="category-options">
                    <option disabled selected>Select a category</option>
                    @foreach (var categories in Model.Categories.Where(c => c.IsStandard == true))
                    {
                        <option value="@categories.Id">@categories.Name</option>
                    }  
                    </select>
                </div>
            </div>
            
            <h1 class="AddCategoryOp">Add your own category - <i>optional</i></h1>
                        <div class="dropdownOp">
                            <label for="category-options"></label>
                            <div class="dropdownClone" id="dropdownContainer">
                                <select name="category-options" id="category-options">
                                <option disabled selected>Select a category</option>
                                    @foreach (var categories in Model.Categories.Where(c => c.IsStandard == false))
                                    {
                                        <option value="@categories.Id">@categories.Name</option>
                                    }   
                                </select>   
                            </div>
                        </div>

            @using (Html.BeginForm("SaveBook", "AddBook", FormMethod.Post))
            {
                <input type="hidden" id="chosenBookId" name="chosenBookId" value="" />
                <button type="submit" class="AddBookButton">Add book</button>
            }

        </div>
        <div class="grid-item2">
            <div class="BookList">
                @foreach (var bookDTO in Model.Books)
                {
                    <div class="grid-item3" data-book-id="@bookDTO.Id" onclick="handleBookClick(event)">
                        <div class="BookImage">
                            <img src="@bookDTO.ImageUrl" class="BookImage" />
                        </div>
                        <div class="BookTitle">
                            <p>@bookDTO.Title</p>
                        </div>
                        <div class="BookAuthor">
                            <p>@bookDTO.Author</p>
                        </div>
                    </div>
                }
            </div>
        </div>

<script>
   function handleBookClick(event) {
       var clickedElement = event.target.closest('.grid-item3');
       if (clickedElement) {
           var id = clickedElement.dataset.bookId;
           document.getElementById('chosenBookId').value = id;
           
           var title = clickedElement.querySelector('.BookTitle p').textContent;
           var author = clickedElement.querySelector('.BookAuthor p').textContent;
           var imageUrl = clickedElement.querySelector('.BookImage img').src;
           displayChosenBook(title, author, imageUrl);
       }
   }
    function displayChosenBook(title, author, imageUrl) {
        var chosenBookTitle = document.getElementById('chosenTitle');
        var chosenBookAuthor = document.getElementById('chosenAuthor');
        var chosenBookImage = document.getElementById('chosenImage');

        chosenBookTitle.textContent = title;
        chosenBookAuthor.textContent = author;
        chosenBookImage.src = imageUrl;

        chosenBookImage.style.display = 'block';
    }
</script>

         <div class="chosenbook">
             <div class="BookImagechosen">
                 <img id="chosenImage" class="image" style="display: none;" />
             </div>
             <div class="BookTitlechosen">
                 <p id="chosenTitle"></p>
             </div>
             <div class="BookAuthorchosen">
                 <p id="chosenAuthor"></p>
             </div>
         </div>
    </div>
</body>
</html>
